[{"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\cadastro\\page.tsx":"1","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\cadastro\\recuperar\\page.tsx":"2","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\layout.tsx":"3","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\gerenciar\\page.tsx":"4","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\nova\\page.tsx":"5","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\[slug]\\page.tsx":"6","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\login\\page.tsx":"7","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\page.tsx":"8","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Dropdown.tsx":"9","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeHasUser.tsx":"10","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeLoadingSkeleton.tsx":"11","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeNoUser.tsx":"12","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Layout.tsx":"13","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Modal.tsx":"14","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Pagination.tsx":"15","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\PrivateRoute.tsx":"16","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Skeleton.tsx":"17","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\constants\\app-routes.ts":"18","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\functions\\check-is-public-route\\index.ts":"19","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\lib\\cliente.jsx":"20","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\providers\\providers.tsx":"21","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\lista.service.jsx":"22","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\room.service.jsx":"23","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\todo.service.jsx":"24","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\user.service.jsx":"25","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\uuid.d.ts":"26","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\authContext.jsx":"27"},{"size":4273,"mtime":1695426206673,"results":"28","hashOfConfig":"29"},{"size":1622,"mtime":1695424823199,"results":"30","hashOfConfig":"29"},{"size":960,"mtime":1695416578548,"results":"31","hashOfConfig":"29"},{"size":6553,"mtime":1695644787436,"results":"32","hashOfConfig":"29"},{"size":6167,"mtime":1695425494920,"results":"33","hashOfConfig":"29"},{"size":12381,"mtime":1695426214449,"results":"34","hashOfConfig":"29"},{"size":4055,"mtime":1695426225386,"results":"35","hashOfConfig":"29"},{"size":1077,"mtime":1695426154489,"results":"36","hashOfConfig":"29"},{"size":1496,"mtime":1695393332808,"results":"37","hashOfConfig":"29"},{"size":2290,"mtime":1695426277110,"results":"38","hashOfConfig":"29"},{"size":224,"mtime":1695344039779,"results":"39","hashOfConfig":"29"},{"size":1540,"mtime":1699317496923,"results":"40","hashOfConfig":"29"},{"size":4087,"mtime":1695426193562,"results":"41","hashOfConfig":"29"},{"size":1672,"mtime":1695388720658,"results":"42","hashOfConfig":"29"},{"size":2095,"mtime":1695422677976,"results":"43","hashOfConfig":"29"},{"size":691,"mtime":1695416464523,"results":"44","hashOfConfig":"29"},{"size":419,"mtime":1695301201780,"results":"45","hashOfConfig":"29"},{"size":427,"mtime":1695416760522,"results":"46","hashOfConfig":"29"},{"size":290,"mtime":1695416017329,"results":"47","hashOfConfig":"29"},{"size":802,"mtime":1695250175297,"results":"48","hashOfConfig":"29"},{"size":232,"mtime":1695261233819,"results":"49","hashOfConfig":"29"},{"size":4703,"mtime":1695644527641,"results":"50","hashOfConfig":"29"},{"size":1795,"mtime":1695250196054,"results":"51","hashOfConfig":"29"},{"size":2143,"mtime":1695343297211,"results":"52","hashOfConfig":"29"},{"size":3180,"mtime":1695424758007,"results":"53","hashOfConfig":"29"},{"size":200,"mtime":1695342748026,"results":"54","hashOfConfig":"29"},{"size":1438,"mtime":1695644698285,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g2ezpe",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\cadastro\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\cadastro\\recuperar\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\layout.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\gerenciar\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\nova\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\lista\\[slug]\\page.tsx",["142"],[],"'use client'\r\nimport { usePathname, useParams, useRouter } from \"next/navigation\"\r\nimport { useEffect, useState } from \"react\"\r\nimport './styles/slugList.css';\r\n\r\nimport { FiMoreHorizontal } from 'react-icons/fi';\r\nimport listaService from \"../../../services/lista.service\";\r\nimport todoService from \"@/services/todo.service\";\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Skeleton from \"@/components/Skeleton\";\r\nimport { useAuthContext } from \"@/components/authContext\";\r\nimport { Pagination } from \"@/components/Pagination\";\r\nimport { Dropdown } from \"@/components/Dropdown\";\r\nimport { AiOutlineDelete, AiOutlineEdit, AiOutlineWarning } from \"react-icons/ai\";\r\nimport { Modal } from \"@/components/Modal\";\r\n\r\nexport default function ListSlug() {\r\n    const pathname = usePathname();\r\n    const auth: any = useAuthContext();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [data, setData] = useState<any>();\r\n\r\n    const [todo, setTodo] = useState(\"\");\r\n    const [addTodoLoading, setAddTodoLoading] = useState(false);\r\n\r\n    const [modalEdit, setModalEdit] = useState(false);\r\n    const [modalDelete, setModalDelete] = useState(false);\r\n    const [dataEdit, setDataEdit] = useState<any>();\r\n    const [dataDelete, setDataDelete] = useState<any>();\r\n    const [loadingModal, setLoadingModal] = useState(false);\r\n    const router = useRouter();\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setTitle(pathname.slice(7).split('-').map(word => word.charAt(0).toLocaleUpperCase() + word.slice(1)).join(' '));\r\n\r\n        async function fetchData() {\r\n            const queryString = window.location.search;\r\n\r\n            if (queryString) {\r\n                const params = new URLSearchParams(queryString);\r\n                const paramId = params.get(\"id\");\r\n\r\n                if(paramId){\r\n                    setId(paramId ? paramId : \"\");\r\n                    const res = await listaService.getLista(paramId);\r\n    \r\n                    setData(res);\r\n                    setLoading(false);\r\n                }else{\r\n                    \r\n                }\r\n            }else{\r\n                router.push(\"/\");\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function fetchData() {\r\n        const queryString = window.location.search;\r\n\r\n        if (queryString) {\r\n            const params = new URLSearchParams(queryString);\r\n            const paramId = params.get(\"id\");\r\n\r\n            setId(paramId ? paramId : \"\");\r\n            const res = await listaService.getLista(paramId);\r\n\r\n            setData(res);\r\n        }\r\n    }\r\n\r\n    const onCheck = async (e: any, item: any) => {\r\n        console.log(`E: ${e.target.checked} | Item: ${item}`);\r\n\r\n        const res = await listaService.updateTodo(id, {\r\n            id: item.id,\r\n            checked: e.target.checked\r\n        });\r\n\r\n        if (res) {\r\n            fetchData();\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = async (e: any) => {\r\n        if (e.key === \"Enter\") {\r\n            if (todo === \"\") {\r\n                setAddTodoLoading(false);\r\n                return\r\n            } else {\r\n                setAddTodoLoading(true);\r\n                const res = await todoService.addTodo(id, {\r\n                    id: uuidv4(),\r\n                    title: todo,\r\n                    checked: false\r\n                });\r\n\r\n                if (res) {\r\n                    setTodo(\"\");\r\n                    fetchData();\r\n                }\r\n\r\n                setAddTodoLoading(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onCancelEdit = () => {\r\n        setModalEdit(false);\r\n    }\r\n\r\n    const onOkEdit = async () => {\r\n        setLoadingModal(true);\r\n        if (dataEdit.title) {\r\n            const res = await listaService.updateTodo(id, dataEdit);\r\n\r\n            if (res) {\r\n                fetchData();\r\n            }\r\n\r\n            setLoadingModal(false);\r\n            setModalEdit(false);\r\n        }\r\n\r\n        if (!dataEdit.title) {\r\n            setError(true);\r\n            setLoadingModal(false);\r\n        }\r\n    }\r\n\r\n    const onCancelDelete = () => {\r\n        setModalDelete(false);\r\n    }\r\n\r\n    const onOkDelete = async () => {\r\n        setLoadingModal(true);\r\n        const res = await listaService.deleteTodo(id, dataDelete);\r\n\r\n        if (res) {\r\n            fetchData();\r\n        }\r\n\r\n        setLoadingModal(false);\r\n        setModalDelete(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal open={modalEdit} onOk={onOkEdit} onCancel={onCancelEdit}\r\n                footer={(\r\n                    <>\r\n                        <button className='back' onClick={() => onCancelEdit()}>Cancelar</button>\r\n                        <button className='ok' onClick={() => onOkEdit()}>\r\n                            {loadingModal && (<span className=\"loader\" style={{\r\n                                width: \"15px\",\r\n                                height: \"15px\",\r\n                                borderColor: \"white\",\r\n                                borderBottomColor: \"transparent\"\r\n                            }}></span>)}\r\n                            {!loadingModal && (\"Editar\")}\r\n                        </button>\r\n                    </>\r\n                )}\r\n                width={600}\r\n            >\r\n                <p>Editar</p>\r\n                <div className=\"form\">\r\n                    <label>Nome do Todo</label>\r\n                    <input type=\"text\" defaultValue={dataEdit?.title} onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            onOkEdit();\r\n                        }\r\n                    }} value={dataEdit?.title} onChange={(e) => {\r\n                        setDataEdit({ ...dataEdit, [\"title\"]: e.currentTarget.value });\r\n                        setError(false);\r\n                    }} />\r\n                    {error && <p className='error'><AiOutlineWarning /> O campo não pode estar em branco</p>}\r\n                </div>\r\n            </Modal>\r\n            <Modal open={modalDelete} onOk={onOkDelete} onCancel={onCancelDelete} footer={(\r\n                <>\r\n                    <button className='back' onClick={() => onCancelDelete()}>Não</button>\r\n                    <button className='ok' onClick={() => onOkDelete()}>\r\n                        {loadingModal && (<span className=\"loader\" style={{\r\n                            width: \"15px\",\r\n                            height: \"15px\",\r\n                            borderColor: \"white\",\r\n                            borderBottomColor: \"transparent\"\r\n                        }}></span>)}\r\n                        {!loadingModal && (\"Sim\")}\r\n                    </button>\r\n                </>\r\n            )}>\r\n                <p>Deseja mesmo excluir?</p>\r\n                <div className=\"form\">\r\n                    <input type=\"text\" disabled value={dataEdit?.title} />\r\n                </div>\r\n            </Modal>\r\n            <div className=\"container-sluglist\">\r\n                {auth?.loading && (\r\n                    <div className=\"center\">\r\n                        <span className=\"loader\"></span>\r\n                    </div>\r\n                )}\r\n                {!auth?.loading && (\r\n                    <>\r\n                        <h2 className=\"title\">\r\n                            {loading ? (\r\n                                <Skeleton width=\"100%\" height=\"40px\" />\r\n                            ) : title}\r\n\r\n                        </h2>\r\n                        <input placeholder=\"Digite uma tarefa...\" className=\"addTarefa\" onKeyDown={handleKeyDown} value={todo} disabled={addTodoLoading ? true : false} onChange={(e) => {\r\n                            if(e.currentTarget.value.length <= 150){\r\n                                setTodo(e.currentTarget.value);\r\n                            }else{\r\n                                setTodo(e.currentTarget.value.slice(0, 150))\r\n                            }\r\n                        }} />\r\n                        <div className=\"line-slug\"></div>\r\n                        <h4>Lista</h4>\r\n                        <div className=\"list-todo\">\r\n                            {loading && (\r\n                                <>\r\n                                    <div className=\"item-list\">\r\n                                        <Skeleton width=\"100%\" height=\"30px\" />\r\n                                    </div>\r\n                                    <div className=\"item-list\">\r\n                                        <Skeleton width=\"100%\" height=\"30px\" />\r\n                                    </div>\r\n                                    <div className=\"item-list\">\r\n                                        <Skeleton width=\"100%\" height=\"30px\" />\r\n                                    </div>\r\n                                    <div className=\"item-list\">\r\n                                        <Skeleton width=\"100%\" height=\"30px\" />\r\n                                    </div>\r\n                                    <div className=\"item-list\">\r\n                                        <Skeleton width=\"100%\" height=\"30px\" />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            {data?.todos && (\r\n                                <Pagination\r\n                                    data={data?.todos.reverse()}\r\n                                    render={(item: any, index: number) => (\r\n                                        <div className=\"item-list\" key={index}>\r\n                                            {item.hasOwnProperty(\"checked\") && (<input className=\"check-todo\" type=\"checkbox\" checked={item.checked} onChange={(e) => onCheck(e, item)} />)}\r\n                                            {item.hasOwnProperty(\"completed\") && (<input className=\"check-todo\" type=\"checkbox\" checked={item.completed} onChange={(e) => onCheck(e, item)} />)}\r\n                                            {item.checked || item.completed ? (<del className=\"title-todo\">{item.title ? item.title : item.text}</del>) \r\n                                            : (<p className=\"title-todo\">{item.title ? item.title : item.text}</p>)}\r\n                                            <Dropdown\r\n                                                item={[\r\n                                                    <div key={1} style={{ display: \"flex\", gap: \"5px\" }} onClick={() => {\r\n                                                        setModalEdit(true);\r\n                                                        setDataEdit({\r\n                                                            id: item.id,\r\n                                                            title: item.title ? item.title : item.text\r\n                                                        });\r\n                                                    }}><AiOutlineEdit /> Editar</div>,\r\n                                                    <div key={2} style={{ display: \"flex\", gap: \"5px\", color: \"red\" }} onClick={() => {\r\n                                                        setModalDelete(true);\r\n                                                        setDataDelete(item.id);\r\n                                                        setDataEdit({\r\n                                                            id: item.id,\r\n                                                            title: item.title ? item.title : item.text\r\n                                                        });\r\n                                                    }}><AiOutlineDelete /> Deletar</div>\r\n                                                ]}\r\n                                            >\r\n                                                <div className=\"more\">\r\n                                                    <FiMoreHorizontal />\r\n                                                </div>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    )}\r\n                                    perPage={8}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\login\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\app\\page.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Dropdown.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeHasUser.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeLoadingSkeleton.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\homeNoUser.tsx",["143","144","145","146","147"],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Layout.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Modal.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Pagination.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\PrivateRoute.tsx",["148"],[],"import { ReactNode, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { APP_ROUTES } from \"@/constants/app-routes\";\r\n\r\ntype PrivateRouteProps = {\r\n    children: ReactNode;\r\n}\r\n\r\nconst PrivateRoute = ({ children }: PrivateRouteProps) => {\r\n    const { push } = useRouter();\r\n\r\n    const isUserAuthencitcated = localStorage.getItem(\"user\");\r\n\r\n    useEffect(() => {\r\n        if(!isUserAuthencitcated){\r\n            push(APP_ROUTES.public.home);\r\n        }\r\n    }, [isUserAuthencitcated]);\r\n\r\n    return(\r\n        <>\r\n            {!isUserAuthencitcated && null}\r\n            {isUserAuthencitcated && children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\Skeleton.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\constants\\app-routes.ts",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\functions\\check-is-public-route\\index.ts",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\lib\\cliente.jsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\providers\\providers.tsx",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\lista.service.jsx",["149"],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\room.service.jsx",["150"],[],"import {database} from \"../lib/client\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  updateDoc,\r\n  doc,\r\n  onSnapshot\r\n} from \"firebase/firestore\";\r\n\r\n\r\nconst roomCollectionRef = collection(database, \"rooms\");\r\n\r\nclass roomService {\r\n  getCurrentPath() {\r\n    // Obtem o caminho da URL em tempo de execução\r\n    return window.location.pathname.substring(1);\r\n  }\r\n\r\n\r\n  createRoom = async (roomData) => {\r\n    const docRef = await addDoc(roomCollectionRef, roomData);\r\n    return docRef.id; // Retorna o ID do novo documento criado\r\n  }\r\n\r\n  addRoomCategoria = async (categoriaData, dataRoom) => {\r\n    const currentPath = this.getCurrentPath();\r\n    const roomRef = doc(database, \"rooms\", currentPath);\r\n\r\n    if(dataRoom.categoria){\r\n      await updateDoc(roomRef, {categoria: [...dataRoom.categoria, categoriaData]})\r\n    }else{\r\n      await updateDoc(roomRef, {categoria: [categoriaData]});\r\n    }\r\n  }\r\n\r\n  addBadge = async (dataRoom, dataBadge) => {\r\n    const currentPath = this.getCurrentPath();\r\n    const roomRef = doc(database, \"rooms\", currentPath);\r\n\r\n    if(dataRoom.badges){\r\n      await updateDoc(roomRef, {badges: [...dataRoom.badges, dataBadge]})\r\n    }else{\r\n      await updateDoc(roomRef, {badges: [dataBadge]});\r\n    }\r\n  }\r\n\r\n  updateRoomCategoriaBadge = async (dataCategoria, dataBadge) => {\r\n    const currentPath = this.getCurrentPath();\r\n    const roomRef = doc(database, \"rooms\", currentPath);\r\n\r\n    await updateDoc(roomRef, {categoria: dataCategoria, badges: dataBadge});\r\n  }\r\n\r\n  subscribeRoom = (callback) => {\r\n\r\n    const currentPath = this.getCurrentPath();\r\n    const roomRef = doc(database, \"rooms\", currentPath);\r\n\r\n    return onSnapshot(roomRef, (querySnapshot) => {\r\n      callback(querySnapshot.data());\r\n    });\r\n  };\r\n}\r\n\r\nexport default new roomService();","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\todo.service.jsx",["151"],[],"'use client'\r\nimport { database } from '../lib/cliente'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  updateDoc,\r\n  onSnapshot,\r\n  serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\nconst roomCollectionRef = collection(database, \"rooms\");\r\n\r\n\r\nclass todoService {\r\n\r\n  getDocs = async (roomId) => {\r\n    try{\r\n      const roomDocRef = doc(database, \"rooms\", roomId);\r\n      const todoCollectionRef = collection(roomDocRef, \"todos\");\r\n\r\n      const todos = await getDocs(todoCollectionRef, orderBy(\"createdAt\", \"desc\"));\r\n\r\n      if(todos){\r\n        return todos.docs.map((item) => item.data());\r\n      }else{\r\n        return false\r\n      }\r\n    }catch(err){\r\n      return false\r\n    }\r\n  };\r\n\r\n  addTodo = async (id, todo) => {\r\n    try{\r\n      const todoRef = doc(database, \"listas\", id);\r\n\r\n      const todoDoc = await getDoc(todoRef);\r\n      let todos = todoDoc.data().todos;\r\n      todos.push({\r\n        ...todo,\r\n        createdAt: new Date()\r\n      });\r\n\r\n      await updateDoc(todoRef, {\r\n        todos: todos\r\n      })\r\n\r\n      return true\r\n    }catch(err){\r\n      console.error(err);\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  addTodoOld = async (id, todo) => {\r\n    const roomDocRef = doc(database, \"rooms\", id);\r\n    const todoCollectionRef = collection(roomDocRef, \"todos\");\r\n\r\n    return await addDoc(todoCollectionRef, {\r\n      ...todo,\r\n      createdAt: serverTimestamp()\r\n    });\r\n  };\r\n\r\n  deleteTodo = async (todoId) => {\r\n\r\n    const currentPath = this.getCurrentPath();\r\n    const roomDocRef = doc(database, \"rooms\", currentPath);\r\n    const todoCollectionRef = collection(roomDocRef, \"todos\");\r\n\r\n    const todoDocRef = doc(todoCollectionRef, todoId);\r\n    await deleteDoc(todoDocRef);\r\n  };\r\n\r\n  updateTodo = async (todoId, updatedData) => {\r\n\r\n    const currentPath = this.getCurrentPath();\r\n    const roomDocRef = doc(database, \"rooms\", currentPath);\r\n    const todoCollectionRef = collection(roomDocRef, \"todos\");\r\n\r\n    const todoDocRef = doc(todoCollectionRef, todoId);\r\n    await updateDoc(todoDocRef, updatedData);\r\n  };\r\n}\r\n\r\nexport default new todoService();","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\services\\user.service.jsx",["152"],[],"'use client'\r\nimport { database, auth } from '../lib/cliente';\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    updateDoc,\r\n    doc,\r\n    getDoc,\r\n    onSnapshot,\r\n    serverTimestamp,\r\n    setDoc\r\n} from \"firebase/firestore\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nconst Collection = collection(database, \"users\");\r\n\r\nclass userService {\r\n    createUser = async (props) => {\r\n        if (typeof window !== 'undefined') {\r\n            try {\r\n                const res = await createUserWithEmailAndPassword(auth, props.email, props.senha)\r\n                    .then(async (user) => {\r\n                        console.log(user);\r\n                        const docRef = doc(Collection, user.user.uid)\r\n                        await setDoc(docRef, {\r\n                            id: user.user.uid,\r\n                            email: props.email,\r\n                            name: props.nome,\r\n                            listas: [],\r\n                            createdAt: serverTimestamp()\r\n                        })\r\n\r\n                        localStorage.setItem(\"user\", JSON.stringify({\r\n                            id: user.user.uid,\r\n                            name: props.nome\r\n                        }))\r\n\r\n                        return \"success\"\r\n                    })\r\n                    .catch((err) => {\r\n                        console.error(err);\r\n                        return err.message\r\n                    })\r\n\r\n\r\n                return res\r\n            } catch (err) {\r\n                console.error(err);\r\n                return err.message\r\n            }\r\n        }\r\n    }\r\n\r\n    getUser = async (id) => {\r\n        try {\r\n            const docRef = doc(Collection, id);\r\n            const res = await getDoc(docRef);\r\n\r\n            return {\r\n                id: res.data().id,\r\n                name: res.data().name,\r\n                listas: res.data().listas,\r\n                email: res.data().email\r\n            };\r\n\r\n        } catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n\r\n    signUser = async (props) => {\r\n        if (typeof window !== 'undefined') {\r\n            try {\r\n                await signInWithEmailAndPassword(auth, props.email, props.senha)\r\n                    .then(async (user) => {\r\n                        const userRes = await this.getUser(user.user.uid);\r\n                        console.log(userRes);\r\n\r\n                        localStorage.setItem(\"user\", JSON.stringify({\r\n                            id: userRes.id,\r\n                            name: userRes.name\r\n                        }));\r\n\r\n                        return \"success\"\r\n                    })\r\n                    .catch((err) => {\r\n                        console.error(err);\r\n                        return \"error\"\r\n                    })\r\n            } catch (err) {\r\n                console.error(err);\r\n                return \"error\"\r\n            }\r\n        }\r\n    }\r\n\r\n    updateUserListas = async (id, data) => {\r\n        const docRef = doc(Collection, id);\r\n\r\n        await updateDoc(docRef, {\r\n            listas: data\r\n        })\r\n    }\r\n}\r\n\r\nexport default new userService();","C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\uuid.d.ts",[],[],"C:\\Users\\Nirayuki\\Documents\\Git\\todo-typescript\\src\\components\\authContext.jsx",[],[],{"ruleId":"153","severity":1,"message":"154","line":65,"column":8,"nodeType":"155","endLine":65,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":21,"nodeType":"159","endLine":15,"endColumn":58},{"ruleId":"157","severity":1,"message":"158","line":19,"column":21,"nodeType":"159","endLine":19,"endColumn":57},{"ruleId":"157","severity":1,"message":"158","line":23,"column":21,"nodeType":"159","endLine":23,"endColumn":69},{"ruleId":"157","severity":1,"message":"158","line":27,"column":21,"nodeType":"159","endLine":27,"endColumn":71},{"ruleId":"157","severity":1,"message":"158","line":31,"column":21,"nodeType":"159","endLine":31,"endColumn":78},{"ruleId":"153","severity":1,"message":"160","line":18,"column":8,"nodeType":"155","endLine":18,"endColumn":30,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":213,"column":1,"nodeType":"164","endLine":213,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":65,"column":1,"nodeType":"164","endLine":65,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":93,"column":1,"nodeType":"164","endLine":93,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":107,"column":1,"nodeType":"164","endLine":107,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pathname' and 'router'. Either include them or remove the dependency array.","ArrayExpression",["165"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.",["166"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [pathname, router]",{"range":"171","text":"172"},"Update the dependencies array to be: [isUserAuthencitcated, push]",{"range":"173","text":"174"},[2334,2336],"[pathname, router]",[492,514],"[isUserAuthencitcated, push]"]